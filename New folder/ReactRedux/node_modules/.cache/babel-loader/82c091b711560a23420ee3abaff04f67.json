{"ast":null,"code":"import _classCallCheck from \"D:/React/New folder/ReactRedux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/React/New folder/ReactRedux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"D:/React/New folder/ReactRedux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/React/New folder/ReactRedux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.0-beta1): button.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\nimport { defineJQueryPlugin } from './util/index';\nimport EventHandler from './dom/event-handler';\nimport BaseComponent from './base-component';\n/**\n * Constants\n */\n\nvar NAME = 'button';\nvar DATA_KEY = 'bs.button';\nvar EVENT_KEY = \".\".concat(DATA_KEY);\nvar DATA_API_KEY = '.data-api';\nvar CLASS_NAME_ACTIVE = 'active';\nvar SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"button\"]';\nvar EVENT_CLICK_DATA_API = \"click\".concat(EVENT_KEY).concat(DATA_API_KEY);\n/**\n * Class definition\n */\n\nvar Button = /*#__PURE__*/function (_BaseComponent) {\n  _inherits(Button, _BaseComponent);\n\n  var _super = _createSuper(Button);\n\n  function Button() {\n    _classCallCheck(this, Button);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Button, [{\n    key: \"toggle\",\n    value: // Public\n    function toggle() {\n      // Toggle class and sync the `aria-pressed` attribute with the return value of the `.toggle()` method\n      this._element.setAttribute('aria-pressed', this._element.classList.toggle(CLASS_NAME_ACTIVE));\n    } // Static\n\n  }], [{\n    key: \"NAME\",\n    get: // Getters\n    function get() {\n      return NAME;\n    }\n  }, {\n    key: \"jQueryInterface\",\n    value: function jQueryInterface(config) {\n      return this.each(function () {\n        var data = Button.getOrCreateInstance(this);\n\n        if (config === 'toggle') {\n          data[config]();\n        }\n      });\n    }\n  }]);\n\n  return Button;\n}(BaseComponent);\n/**\n * Data API implementation\n */\n\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  event.preventDefault();\n  var button = event.target.closest(SELECTOR_DATA_TOGGLE);\n  var data = Button.getOrCreateInstance(button);\n  data.toggle();\n});\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Button);\nexport default Button;","map":{"version":3,"names":["defineJQueryPlugin","EventHandler","BaseComponent","NAME","DATA_KEY","EVENT_KEY","DATA_API_KEY","CLASS_NAME_ACTIVE","SELECTOR_DATA_TOGGLE","EVENT_CLICK_DATA_API","Button","_element","setAttribute","classList","toggle","config","each","data","getOrCreateInstance","on","document","event","preventDefault","button","target","closest"],"sources":["D:/React/New folder/ReactRedux/node_modules/bootstrap/js/src/button.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.0-beta1): button.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { defineJQueryPlugin } from './util/index'\nimport EventHandler from './dom/event-handler'\nimport BaseComponent from './base-component'\n\n/**\n * Constants\n */\n\nconst NAME = 'button'\nconst DATA_KEY = 'bs.button'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst CLASS_NAME_ACTIVE = 'active'\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"button\"]'\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\n/**\n * Class definition\n */\n\nclass Button extends BaseComponent {\n  // Getters\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  toggle() {\n    // Toggle class and sync the `aria-pressed` attribute with the return value of the `.toggle()` method\n    this._element.setAttribute('aria-pressed', this._element.classList.toggle(CLASS_NAME_ACTIVE))\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Button.getOrCreateInstance(this)\n\n      if (config === 'toggle') {\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, event => {\n  event.preventDefault()\n\n  const button = event.target.closest(SELECTOR_DATA_TOGGLE)\n  const data = Button.getOrCreateInstance(button)\n\n  data.toggle()\n})\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Button)\n\nexport default Button\n"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,kBAAT,QAAmC,cAAnC;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AAEA;AACA;AACA;;AAEA,IAAMC,IAAI,GAAG,QAAb;AACA,IAAMC,QAAQ,GAAG,WAAjB;AACA,IAAMC,SAAS,cAAOD,QAAP,CAAf;AACA,IAAME,YAAY,GAAG,WAArB;AAEA,IAAMC,iBAAiB,GAAG,QAA1B;AACA,IAAMC,oBAAoB,GAAG,2BAA7B;AACA,IAAMC,oBAAoB,kBAAWJ,SAAX,SAAuBC,YAAvB,CAA1B;AAEA;AACA;AACA;;IAEMI,M;;;;;;;;;;;;;WAMJ;IACA,kBAAS;MACP;MACA,KAAKC,QAAL,CAAcC,YAAd,CAA2B,cAA3B,EAA2C,KAAKD,QAAL,CAAcE,SAAd,CAAwBC,MAAxB,CAA+BP,iBAA/B,CAA3C;IACD,C,CAED;;;;SAXA;IACA,eAAkB;MAChB,OAAOJ,IAAP;IACD;;;WASD,yBAAuBY,MAAvB,EAA+B;MAC7B,OAAO,KAAKC,IAAL,CAAU,YAAY;QAC3B,IAAMC,IAAI,GAAGP,MAAM,CAACQ,mBAAP,CAA2B,IAA3B,CAAb;;QAEA,IAAIH,MAAM,KAAK,QAAf,EAAyB;UACvBE,IAAI,CAACF,MAAD,CAAJ;QACD;MACF,CANM,CAAP;IAOD;;;;EArBkBb,a;AAwBrB;AACA;AACA;;;AAEAD,YAAY,CAACkB,EAAb,CAAgBC,QAAhB,EAA0BX,oBAA1B,EAAgDD,oBAAhD,EAAsE,UAAAa,KAAK,EAAI;EAC7EA,KAAK,CAACC,cAAN;EAEA,IAAMC,MAAM,GAAGF,KAAK,CAACG,MAAN,CAAaC,OAAb,CAAqBjB,oBAArB,CAAf;EACA,IAAMS,IAAI,GAAGP,MAAM,CAACQ,mBAAP,CAA2BK,MAA3B,CAAb;EAEAN,IAAI,CAACH,MAAL;AACD,CAPD;AASA;AACA;AACA;;AAEAd,kBAAkB,CAACU,MAAD,CAAlB;AAEA,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}
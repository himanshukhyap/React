{"ast":null,"code":"var _defineProperty = require(\"D:/React/New folder/ReactRedux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\n\n/*!\n  * Bootstrap component-functions.js v5.2.0-beta1 (https://getbootstrap.com/)\n  * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('../dom/event-handler'), require('./index')) : typeof define === 'function' && define.amd ? define(['exports', '../dom/event-handler', './index'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ComponentFunctions = {}, global.EventHandler, global.Index));\n})(this, function (exports, EventHandler, index) {\n  'use strict';\n\n  var _interopDefaultLegacy = function _interopDefaultLegacy(e) {\n    return e && typeof e === 'object' && 'default' in e ? e : {\n      default: e\n    };\n  };\n\n  var EventHandler__default = /*#__PURE__*/_interopDefaultLegacy(EventHandler);\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.2.0-beta1): util/component-functions.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n\n  var enableDismissTrigger = function enableDismissTrigger(component) {\n    var method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'hide';\n    var clickEvent = \"click.dismiss\".concat(component.EVENT_KEY);\n    var name = component.NAME;\n    EventHandler__default.default.on(document, clickEvent, \"[data-bs-dismiss=\\\"\".concat(name, \"\\\"]\"), function (event) {\n      if (['A', 'AREA'].includes(this.tagName)) {\n        event.preventDefault();\n      }\n\n      if (index.isDisabled(this)) {\n        return;\n      }\n\n      var target = index.getElementFromSelector(this) || this.closest(\".\".concat(name));\n      var instance = component.getOrCreateInstance(target); // Method argument is left, for Alert and only, as it doesn't implement the 'hide' method\n\n      instance[method]();\n    });\n  };\n\n  exports.enableDismissTrigger = enableDismissTrigger;\n  Object.defineProperties(exports, _defineProperty({\n    __esModule: {\n      value: true\n    }\n  }, Symbol.toStringTag, {\n    value: 'Module'\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;EAAA;;;;;;;;EAUMA,wBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,SAAD,EAAgC;IAAA,IAApBC,MAAoB,uEAAX,MAAW;IAC3D,IAAMC,UAAU,0BAAmBF,SAAS,CAACG,SAA7B,CAAhB;IACA,IAAMC,IAAI,GAAGJ,SAAS,CAACK,IAAvB;IAEAC,8BAAaC,EAAbD,CAAgBE,QAAhBF,EAA0BJ,UAA1BI,+BAA2DF,IAA3DE,UAAqE,UAAUG,KAAV,EAAiB;MACpF,IAAI,CAAC,GAAD,EAAM,MAAN,EAAcC,QAAd,CAAuB,KAAKC,OAA5B,CAAJ,EAA0C;QACxCF,KAAK,CAACG,cAANH;MACD;;MAED,IAAII,iBAAW,IAAXA,CAAJ,EAAsB;QACpB;MACD;;MAED,IAAMC,MAAM,GAAGC,6BAAuB,IAAvBA,KAAgC,KAAKC,OAAL,YAAiBZ,IAAjB,EAA/C;MACA,IAAMa,QAAQ,GAAGjB,SAAS,CAACkB,mBAAVlB,CAA8Bc,MAA9Bd,CAAjB,CAVoF;;MAapFiB,QAAQ,CAAChB,MAAD,CAARgB;IAbF;EAeD,CAnBKlB","names":["enableDismissTrigger","component","method","clickEvent","EVENT_KEY","name","NAME","EventHandler","on","document","event","includes","tagName","preventDefault","isDisabled","target","getElementFromSelector","closest","instance","getOrCreateInstance"],"sources":["../../src/util/component-functions.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.0-beta1): util/component-functions.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport EventHandler from '../dom/event-handler'\nimport { getElementFromSelector, isDisabled } from './index'\n\nconst enableDismissTrigger = (component, method = 'hide') => {\n  const clickEvent = `click.dismiss${component.EVENT_KEY}`\n  const name = component.NAME\n\n  EventHandler.on(document, clickEvent, `[data-bs-dismiss=\"${name}\"]`, function (event) {\n    if (['A', 'AREA'].includes(this.tagName)) {\n      event.preventDefault()\n    }\n\n    if (isDisabled(this)) {\n      return\n    }\n\n    const target = getElementFromSelector(this) || this.closest(`.${name}`)\n    const instance = component.getOrCreateInstance(target)\n\n    // Method argument is left, for Alert and only, as it doesn't implement the 'hide' method\n    instance[method]()\n  })\n}\n\nexport {\n  enableDismissTrigger\n}\n"]},"metadata":{},"sourceType":"script"}
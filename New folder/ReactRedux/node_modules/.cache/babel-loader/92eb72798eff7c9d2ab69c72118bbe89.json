{"ast":null,"code":"import _objectSpread from \"D:/React/New folder/ReactRedux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"D:/React/New folder/ReactRedux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"D:\\\\React\\\\New folder\\\\ReactRedux\\\\src\\\\Component\\\\AfterLogin\\\\TaskShow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DeleteTask, GetTaskList } from '../../API/Api';\nimport { GetTaskList1, GetTaskList2 } from '../../Redux/Actions/GetTaskListAction';\nimport { LoaderAction } from '../../Redux/Actions/LoaderAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TaskShow() {\n  _s();\n\n  var _this = this;\n\n  var disptach = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      status = _useState2[0],\n      setstatus = _useState2[1];\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.formState.errors;\n\n  var onSubmit = function onSubmit(data) {\n    return console.log(data);\n  };\n\n  useEffect(function () {\n    if (TaskList == null) {\n      disptach(LoaderAction(true));\n    }\n\n    return function () {\n      GetTaskList(disptach, sessionStorage.getItem(\"UserLogin\"));\n    };\n  }, []);\n  var TaskList = useSelector(function (state) {\n    return state.GettaskListReducer;\n  });\n  console.log(TaskList);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pending\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 8\n    }, this), TaskList != null ? TaskList.filter(function (f) {\n      return f.Complete == false;\n    }).map(function (x) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group w-50 my-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group-text\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, register(\"radio1\")), {}, {\n            type: \"radio\",\n            className: \"form-check-input mt-0\",\n            onChange: function onChange() {\n              console.log(x.TaskId);\n            }\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          \"aria-label\": \"Text input with radio button\",\n          value: x.Task,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: function onClick() {\n            return DeleteTask(x.TaskId);\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, _this);\n    }) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"No Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Complete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), TaskList != null ? TaskList.filter(function (f) {\n      return f.Complete == true;\n    }).map(function (x) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group w-50 my-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group-text\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, register(\"radio1\")), {}, {\n            type: \"radio\",\n            className: \"form-check-input mt-0\",\n            onChange: function onChange() {\n              console.log(x.TaskId);\n            }\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          \"aria-label\": \"Text input with radio button\",\n          value: x.Task,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: function onClick() {\n            return DeleteTask(x.TaskId);\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, _this);\n    }) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"No Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TaskShow, \"8meFoNlhJvDtvi27L9jw1R2nlBc=\", false, function () {\n  return [useDispatch, useForm, useSelector];\n});\n\n_c = TaskShow;\nexport default TaskShow;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskShow\");","map":{"version":3,"names":["React","useEffect","useState","useForm","useDispatch","useSelector","DeleteTask","GetTaskList","GetTaskList1","GetTaskList2","LoaderAction","TaskShow","disptach","status","setstatus","register","handleSubmit","errors","formState","onSubmit","data","console","log","TaskList","sessionStorage","getItem","state","GettaskListReducer","filter","f","Complete","map","x","TaskId","Task"],"sources":["D:/React/New folder/ReactRedux/src/Component/AfterLogin/TaskShow.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { DeleteTask, GetTaskList } from '../../API/Api';\r\nimport { GetTaskList1, GetTaskList2 } from '../../Redux/Actions/GetTaskListAction';\r\nimport { LoaderAction } from '../../Redux/Actions/LoaderAction';\r\n\r\n\r\nfunction TaskShow() {\r\n  const disptach = useDispatch()\r\n  const [status, setstatus] = useState(false)\r\n\r\n  const { register, handleSubmit, formState: { errors } } = useForm();\r\n  const onSubmit = data => console.log(data);\r\n  useEffect(() => {\r\n    if (TaskList == null) {\r\n      disptach(LoaderAction(true))\r\n    }\r\n    return () => {\r\n      GetTaskList(disptach, sessionStorage.getItem(\"UserLogin\"))\r\n    }\r\n  }, [])\r\n\r\n  const TaskList = useSelector((state: any) => state.GettaskListReducer);\r\n  console.log(TaskList)\r\n\r\n  return (\r\n    <>\r\n       <h1>Pending</h1>\r\n      {TaskList != null ? TaskList.filter(f=>f.Complete == false).map((x) => {\r\n        return (\r\n          <div className=\"input-group w-50 my-2\">\r\n            <div className=\"input-group-text\">\r\n              <input {...register(\"radio1\")} type=\"radio\"  className=\"form-check-input mt-0\" onChange={()=>{console.log(x.TaskId)}}/>\r\n\r\n            </div>\r\n            <input type=\"text\" className=\"form-control\" aria-label=\"Text input with radio button\" value={x.Task} readOnly/>\r\n            <button onClick={()=>DeleteTask(x.TaskId)}>Delete</button>\r\n\r\n          </div>\r\n        )\r\n      })\r\n\r\n        : <h1>No Data</h1>}\r\n\r\n    <h1>Complete</h1>\r\n\r\n      {TaskList != null ? TaskList.filter(f=>f.Complete == true).map((x) => {\r\n        return (\r\n          <div className=\"input-group w-50 my-2\">\r\n            <div className=\"input-group-text\">\r\n              <input {...register(\"radio1\")} type=\"radio\"  className=\"form-check-input mt-0\" onChange={()=>{console.log(x.TaskId)}}/>\r\n\r\n            </div>\r\n            <input type=\"text\" className=\"form-control\" aria-label=\"Text input with radio button\" value={x.Task} readOnly/>\r\n            <button onClick={()=>DeleteTask(x.TaskId)}>Delete</button>\r\n\r\n          </div>\r\n        )\r\n      })\r\n\r\n        : <h1>No Data</h1>}\r\n     \r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default TaskShow"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,eAAxC;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,uCAA3C;AACA,SAASC,YAAT,QAA6B,kCAA7B;;;;AAGA,SAASC,QAAT,GAAoB;EAAA;;EAAA;;EAClB,IAAMC,QAAQ,GAAGR,WAAW,EAA5B;;EACA,gBAA4BF,QAAQ,CAAC,KAAD,CAApC;EAAA;EAAA,IAAOW,MAAP;EAAA,IAAeC,SAAf;;EAEA,eAA0DX,OAAO,EAAjE;EAAA,IAAQY,QAAR,YAAQA,QAAR;EAAA,IAAkBC,YAAlB,YAAkBA,YAAlB;EAAA,IAA6CC,MAA7C,YAAgCC,SAAhC,CAA6CD,MAA7C;;EACA,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAAAC,IAAI;IAAA,OAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAJ;EAAA,CAArB;;EACAnB,SAAS,CAAC,YAAM;IACd,IAAIsB,QAAQ,IAAI,IAAhB,EAAsB;MACpBX,QAAQ,CAACF,YAAY,CAAC,IAAD,CAAb,CAAR;IACD;;IACD,OAAO,YAAM;MACXH,WAAW,CAACK,QAAD,EAAWY,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAX,CAAX;IACD,CAFD;EAGD,CAPQ,EAON,EAPM,CAAT;EASA,IAAMF,QAAQ,GAAGlB,WAAW,CAAC,UAACqB,KAAD;IAAA,OAAgBA,KAAK,CAACC,kBAAtB;EAAA,CAAD,CAA5B;EACAN,OAAO,CAACC,GAAR,CAAYC,QAAZ;EAEA,oBACE;IAAA,wBACG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADH,EAEGA,QAAQ,IAAI,IAAZ,GAAmBA,QAAQ,CAACK,MAAT,CAAgB,UAAAC,CAAC;MAAA,OAAEA,CAAC,CAACC,QAAF,IAAc,KAAhB;IAAA,CAAjB,EAAwCC,GAAxC,CAA4C,UAACC,CAAD,EAAO;MACrE,oBACE;QAAK,SAAS,EAAC,uBAAf;QAAA,wBACE;UAAK,SAAS,EAAC,kBAAf;UAAA,uBACE,iDAAWjB,QAAQ,CAAC,QAAD,CAAnB;YAA+B,IAAI,EAAC,OAApC;YAA6C,SAAS,EAAC,uBAAvD;YAA+E,QAAQ,EAAE,oBAAI;cAACM,OAAO,CAACC,GAAR,CAAYU,CAAC,CAACC,MAAd;YAAsB;UAApH;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,SADF,eAKE;UAAO,IAAI,EAAC,MAAZ;UAAmB,SAAS,EAAC,cAA7B;UAA4C,cAAW,8BAAvD;UAAsF,KAAK,EAAED,CAAC,CAACE,IAA/F;UAAqG,QAAQ;QAA7G;UAAA;UAAA;UAAA;QAAA,SALF,eAME;UAAQ,OAAO,EAAE;YAAA,OAAI5B,UAAU,CAAC0B,CAAC,CAACC,MAAH,CAAd;UAAA,CAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,SANF;MAAA;QAAA;QAAA;QAAA;MAAA,SADF;IAWD,CAZmB,CAAnB,gBAcG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAhBN,eAkBA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAlBA,EAoBGV,QAAQ,IAAI,IAAZ,GAAmBA,QAAQ,CAACK,MAAT,CAAgB,UAAAC,CAAC;MAAA,OAAEA,CAAC,CAACC,QAAF,IAAc,IAAhB;IAAA,CAAjB,EAAuCC,GAAvC,CAA2C,UAACC,CAAD,EAAO;MACpE,oBACE;QAAK,SAAS,EAAC,uBAAf;QAAA,wBACE;UAAK,SAAS,EAAC,kBAAf;UAAA,uBACE,iDAAWjB,QAAQ,CAAC,QAAD,CAAnB;YAA+B,IAAI,EAAC,OAApC;YAA6C,SAAS,EAAC,uBAAvD;YAA+E,QAAQ,EAAE,oBAAI;cAACM,OAAO,CAACC,GAAR,CAAYU,CAAC,CAACC,MAAd;YAAsB;UAApH;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,SADF,eAKE;UAAO,IAAI,EAAC,MAAZ;UAAmB,SAAS,EAAC,cAA7B;UAA4C,cAAW,8BAAvD;UAAsF,KAAK,EAAED,CAAC,CAACE,IAA/F;UAAqG,QAAQ;QAA7G;UAAA;UAAA;UAAA;QAAA,SALF,eAME;UAAQ,OAAO,EAAE;YAAA,OAAI5B,UAAU,CAAC0B,CAAC,CAACC,MAAH,CAAd;UAAA,CAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,SANF;MAAA;QAAA;QAAA;QAAA;MAAA,SADF;IAWD,CAZmB,CAAnB,gBAcG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAlCN;EAAA,gBADF;AAwCD;;GA1DQtB,Q;UACUP,W,EAGyCD,O,EAWzCE,W;;;KAfVM,Q;AA4DT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}